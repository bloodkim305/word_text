{"version":3,"sources":["components/TopBar.js","components/EnglishWord.js","components/TestPage.js","App.js","index.js"],"names":["useInput","initialValue","validator","useState","value","setValue","onChange","event","target","willUpdate","TopBar","handleQuestion","handleAnswer","maxLen3","length","questionNumber","fromNumber","toNumber","className","placeholder","onClick","preventDefault","EnglishWord","english","han","answerMode","TestPage","answer","question","map","key","App","setAnswer","setQuestion","from","to","questionArray","parsedNumber","parseInt","parsedFrom","parsedTo","isNaN","alert","number","inputFrom","inputTo","test","wordIndexArray","firstDay","secondDay","rangeArray","wordsFile","slice","i","wordIndex","Math","floor","random","includes","push","console","log","word","Object","values","every","extractQuestion","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1f06fe9e.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\n\r\nconst useInput = (initialValue, validator) => {\r\n  const [value, setValue] = useState(initialValue);\r\n  const onChange = event => {\r\n    const {\r\n      target: { value }\r\n    } = event;\r\n    let willUpdate = true;\r\n    if (typeof validator === \"function\") {\r\n      willUpdate = validator(value);\r\n    }\r\n\r\n    if (willUpdate) {\r\n      setValue(value);\r\n    }\r\n  };\r\n  return { value, onChange };\r\n};\r\n\r\nconst TopBar = ({ handleQuestion, handleAnswer }) => {\r\n  const maxLen = value => value.length <= 2;\r\n  const maxLen3 = value => value.length <= 3;\r\n  const questionNumber = useInput(\"\", maxLen);\r\n  const fromNumber = useInput(\"\", maxLen3);\r\n  const toNumber = useInput(\"\", maxLen3);\r\n\r\n  const handleQuestionAndAnswer = event => {\r\n    event.preventDefault();\r\n    if (event.target.className === \"setQuestion\") {\r\n      handleQuestion(questionNumber.value, fromNumber.value, toNumber.value);\r\n    } else {\r\n      handleAnswer();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <form>\r\n      <div className=\"questionRange\">\r\n        <input className=\"fromInput\" placeholder=\"Day:\" {...fromNumber} />\r\n        <span>에서</span>\r\n        <input className=\"untilInput\" placeholder=\"Day:\" {...toNumber} />\r\n        <span>까지</span>\r\n        <input\r\n          className=\"questionNumber\"\r\n          placeholder=\"문제수: 40이하\"\r\n          {...questionNumber}\r\n        />\r\n      </div>\r\n      <div onClick={handleQuestionAndAnswer}>\r\n        <button className=\"showingHidden\">정답보기&숨기기</button>\r\n        <button className=\"setQuestion\">문제출제</button>\r\n      </div>\r\n    </form>\r\n  );\r\n};\r\n\r\nexport default TopBar;\r\n","import React from \"react\";\r\nimport \"./EnglishWord.css\";\r\n\r\nfunction EnglishWord({ english, han, answerMode }) {\r\n\treturn answerMode ? (\r\n\t\t<li className=\"qAndA\">\r\n\t\t\t<div className=\"question\">{english}</div>\r\n\t\t\t<div className=\"answer\">{han}</div>\r\n\t\t</li>\r\n\t) : (\r\n\t\t<li className=\"qAndA\">\r\n\t\t\t<div className=\"question\">{english}</div>\r\n\t\t\t<div className=\"answer hidden\">{han}</div>\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\nexport default EnglishWord;\r\n","import React from \"react\";\r\nimport EnglishWord from \"./EnglishWord\";\r\n\r\nconst TestPage = ({ answer, question }) => {\r\n  return (\r\n    <ul className=\"questions\">\r\n      {question.map(question => (\r\n        <EnglishWord\r\n          key={question.english}\r\n          english={question.english}\r\n          han={question.han}\r\n          answerMode={answer}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default TestPage;","import React, { useState } from \"react\";\r\nimport TopBar from \"./components/TopBar\";\r\nimport TestPage from \"./components/TestPage\";\r\nimport wordsFile from \"./dataFile/wordsFile.json\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [answer, setAnswer] = useState(false);\r\n  const [question, setQuestion] = useState([]);\r\n  const day = 50;\r\n\r\n  const extractQuestion = (number, inputFrom, inputTo) => {\r\n    const test = [];\r\n    const wordIndexArray = [];\r\n    const firstDay = (inputFrom - 1) * day;\r\n    const secondDay = inputTo * day;\r\n    const rangeArray = wordsFile.slice(firstDay, secondDay);\r\n\r\n    let i = 0;\r\n    while (i < number) {\r\n      const wordIndex = Math.floor(Math.random() * rangeArray.length);\r\n      if (wordIndexArray.includes(wordIndex)) {\r\n        continue;\r\n      }\r\n      wordIndexArray.push(wordIndex);\r\n      test.push(rangeArray[wordIndex]);\r\n      i++;\r\n    }\r\n    console.log(rangeArray.map(word => Object.values(word)));\r\n    console.log(test.every(value => rangeArray.includes(value)));\r\n    return test;\r\n  };\r\n\r\n  const saveQuestion = questionArray => {\r\n    return setQuestion(questionArray);\r\n  };\r\n\r\n  const handleAnswer = () => {\r\n    if (!answer) {\r\n      setAnswer(true);\r\n    } else {\r\n      setAnswer(false);\r\n    }\r\n  };\r\n\r\n  const handleQuestion = (value, from, to) => {\r\n    const parsedNumber = parseInt(value, 10);\r\n    const parsedFrom = parseInt(from, 10);\r\n    const parsedTo = parseInt(to, 10);\r\n    if (isNaN(parsedNumber) || parsedNumber > 50) {\r\n      return alert(\"40이하의 숫자만 입력하시오\");\r\n    } else if (\r\n      isNaN(parsedFrom) ||\r\n      isNaN(parsedTo) ||\r\n      parsedFrom > 100 ||\r\n      parsedTo > 100\r\n    ) {\r\n      return alert(\"범위지정에는 100이하의 숫자만 입력하시오\");\r\n    }\r\n    setAnswer(false);\r\n    saveQuestion(extractQuestion(parsedNumber, parsedFrom, parsedTo));\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TopBar handleQuestion={handleQuestion} handleAnswer={handleAnswer} />\r\n      <TestPage answer={answer} question={question} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}